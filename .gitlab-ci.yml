# gitlab-ci.yml sample

# Docker image
image: openjdk:8-jdk

# Variables
# ANDROID_COMPILE_SDK: Should match compileVersionSDK
# ANDROID_BUILD_TOOLS: Should match buildToolsVersion
# ANDROID_SDK_TOOLS: version of the command line tools. Get it from: https://developer.android.com/studio/index.html
variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS: "4333796"

before_script:
  # Installing packages
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1

  # Installing Android SDK
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null

  # Setting up the environment
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  # build: makes sure the app compiles
  # test:  runs unit and functional tests
  - build
  - test

#lintDebug:
#  stage: build
#  script:
#    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

assembleDebug:
  stage: build
  script:
    - "echo $API_KEY > /app/src/main/java/emg/soccerstats/utils/Secrets/API_KEY"
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/

# Prepares debugging
#debugTests:
#  stage: test
#  script:
#    - ./gradlew -Pci --console=plain :app:testDebug